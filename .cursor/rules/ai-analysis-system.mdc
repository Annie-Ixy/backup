---
description: 
globs: 
alwaysApply: false
---
# AI简历分析系统

## 分析流程概览
系统使用OpenAI GPT-4对简历进行智能分析，生成结构化的候选人评估报告，并自动检测和处理重复简历。

## 核心分析逻辑
分析逻辑主要在 [server/index.js](mdc:server/index.js) 的 `analyzeResume` 函数中实现。

## 重复简历检测功能 🆕

### 检测算法
系统使用多维度相似度算法检测重复简历：

1. **姓名相似度**: 使用编辑距离算法计算姓名相似性
2. **文本相似度**: 使用Jaccard相似度算法比较简历内容
3. **关键信息相似度**: 比较教育背景和工作经验的相似性

### 重复判定条件
满足以下任一条件即判定为重复简历：
- 姓名高度相似(>80%) 且 文本相似度高(>70%)
- 文本内容极度相似(>90%) - 可能是同一份简历的不同版本
- 姓名相同(>90%) 且 教育背景和经验都相似(>80%)

### 处理策略
- **自动去重**: 检测到重复简历时自动保留评分最高的版本
- **详细记录**: 记录所有重复检测的详细信息和处理结果
- **用户提示**: 在前端显示去重统计和详细信息

### 相关函数
- `calculateTextSimilarity()`: 计算文本相似度
- `calculateNameSimilarity()`: 计算姓名相似度
- `detectDuplicateResumes()`: 检测重复简历组
- `processDuplicateResumes()`: 处理重复简历并生成报告

## 评估维度

### 1. 专业技能 (25%)
- 核心技能匹配度
- 专业能力深度
- 技术栈相关性

### 2. 工具能力 (20%)
- 软件工具熟练度
- 编程语言掌握
- 平台使用经验

### 3. 项目经验 (25%)
- 相关项目经历
- 实际应用能力
- 成果展示质量

### 4. 教育背景 (15%)
- 相关专业学历
- 学校声誉
- 学术成就

### 5. 工作经验 (15%)
- 行业经验
- 公司背景
- 职位级别
- 职业发展轨迹

## 评分体系

### 分数等级
- **90-100分**: 顶级推荐 - 完美匹配，强烈推荐
- **80-89分**: 优秀候选 - 高度匹配，推荐面试
- **70-79分**: 中等匹配 - 良好匹配，可考虑
- **60-69分**: 有限匹配 - 需要进一步评估
- **60分以下**: 不太匹配 - 不建议推荐

### 输出格式
AI分析返回JSON格式的结构化数据:
```json
{
  "name": "候选人姓名",
  "score": 85,
  "level": "优秀候选",
  "skills": ["技能1", "技能2"],
  "experience": "工作经验描述",
  "education": "教育背景",
  "strengths": ["优势1", "优势2"],
  "weaknesses": ["不足1", "不足2"],
  "recommendation": "推荐理由",
  "isDeduplicated": true,
  "duplicateCount": 2,
  "duplicateInfo": "此候选人有2份相似简历，已保留评分最高版本"
}
```

## 文件处理流程

### 1. ZIP文件解压
- 使用yauzl库解压上传的ZIP文件
- 提取其中的PDF简历文件
- 处理中文文件名编码问题

### 2. PDF内容提取
- 使用pdf-parse库解析PDF文件
- 提取文本内容用于AI分析
- 支持中文简历内容

### 3. AI分析调用
- 构建分析prompt模板
- 调用OpenAI GPT-4 API
- 解析返回的JSON结果

### 4. 重复检测处理 🆕
- 对所有候选人进行重复检测
- 自动去除重复简历，保留最佳版本
- 生成重复处理报告

### 5. 结果缓存和排序
- 将分析结果存储在内存中
- 按照评分进行排序
- 支持实时进度查询

## 前端显示功能 🆕

### 重复信息展示
- 在候选人列表顶部显示去重统计
- 可展开查看详细的重复处理信息
- 在候选人卡片上标记"已去重"标识

### 用户体验优化
- 自动处理，无需用户干预
- 透明的处理过程展示
- 详细的去重日志记录

## 自定义配置

### 修改岗位要求
在 [server/index.js](mdc:server/index.js) 中修改prompt模板:
```javascript
const prompt = `
请分析以下简历，针对[目标岗位]进行评估...
`;
```

### 调整重复检测阈值 🆕
修改重复检测的相似度阈值：
```javascript
const isDuplicate = (
  (nameSimilarity > 0.8 && textSimilarity > 0.7) ||  // 可调整阈值
  (textSimilarity > 0.9) ||                          // 可调整阈值
  (nameSimilarity > 0.9 && educationSimilarity > 0.8 && experienceSimilarity > 0.8)
);
```

### 调整评分权重
修改AI prompt中的评分标准和各维度权重。

### 优化分析准确性
- 完善prompt模板描述
- 增加具体的评估标准
- 提供更多上下文信息

## 性能优化

### 批量处理
- 支持同时处理多个简历文件
- 实现并发控制避免API限制
- 提供实时进度反馈

### 错误处理
- API调用失败重试机制
- PDF解析错误处理
- 文件编码问题处理

### 缓存策略
- 内存缓存分析结果
- 避免重复分析相同文件
- 支持结果持久化存储

## 扩展功能

### 即将支持
- 自定义评分模板
- 多种岗位类型适配
- 候选人对比分析
- 历史数据分析

### 高级特性
- 机器学习模型训练
- 个性化推荐算法
- 多语言简历支持
- 视频简历分析



